<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

	<context:property-placeholder location="classpath:system.properties" />
	<!-- <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/mysqlds" /> -->
	<!-- 
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClass}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
	</bean> -->
	<!-- BoneCP -->
	<!--  -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxConnectionsPerPartition" value="${jdbc.max.connection}"/>
		<property name="minConnectionsPerPartition" value="${jdbc.min.connection}"/>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
				
				<!-- 
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_second_level_cache}</prop>
				-->
			</props>
		</property>
		<property name="packagesToScan" value="tw.com.dsc.domain" />
	</bean>
	
	<bean id="mysqlDataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<property name="driverClass" value="${mysql.driverClass}" />
		<property name="jdbcUrl" value="${mysql.url}" />
		<property name="username" value="${mysql.user}" />
		<property name="password" value="${mysql.password}" />
		<property name="maxConnectionsPerPartition" value="${mysql.max.connection}"/>
		<property name="minConnectionsPerPartition" value="${mysql.min.connection}"/>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehcache" />
	</bean>
	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg index="0" ref="mysqlDataSource"/>
	</bean>
	
	<bean id="mysqlTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mysqlDataSource" />
	</bean>
	
	<bean id="articleIdSeq" class="org.springframework.jdbc.support.incrementer.OracleSequenceMaxValueIncrementer">
		<property name="dataSource" ref="dataSource" />
		<property name="incrementerName" value="SEQ_ARTICLE_ID" />
		<property name="paddingLength" value="6"/>
	</bean>
	<bean id="exportIdSeq" class="org.springframework.jdbc.support.incrementer.OracleSequenceMaxValueIncrementer">
		<property name="dataSource" ref="dataSource" />
		<property name="incrementerName" value="SEQ_EITS_EXPORT_PACKAGE" />
		<property name="paddingLength" value="3"/>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<context:annotation-config />
	<context:component-scan base-package="tw.com.dsc" />
	
	<cache:annotation-driven cache-manager="cacheManager"/>
	
	
	
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
		<property name="queueCapacity" value="100" />
		<property name="keepAliveSeconds" value="300" />
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>
	<task:scheduler id="scheduler" pool-size="10" />
	<task:scheduled-tasks scheduler="scheduler">
		<task:scheduled ref="articleService" method="expire" cron="0 0 */6 * * *"/>
	</task:scheduled-tasks>
	<!-- <task:annotation-driven executor="taskExecutor" scheduler="scheduler"/> -->
	<import resource="applicationContext_Mail.xml"/>
</beans>
